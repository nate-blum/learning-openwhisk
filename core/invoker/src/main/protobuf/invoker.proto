/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "org.apache.openwhisk.grpc";
option java_outer_classname = "InvokerProto";

package invoker;

service InvokerService {
  rpc NewPrewarmedContainer (NewPrewarmedContainerRequest) returns (NewPrewarmedContainerResponse) {}

  rpc SetAllowOpenWhiskToFreeMemory (SetAllowOpenWhiskToFreeMemoryRequest) returns (SetAllowOpenWhiskToFreeMemoryResponse) {}
}

// currently supported params:
// pin -> number in binary is whether container is pinned to that core, i.e. 4 = 0100 means container is pinned to core 2, 5 = 0101 = pinned to cores 0 & 2
message NewPrewarmedContainerRequest {
  string actionName = 1;
  map<string, uint64> params = 2;
}

message NewPrewarmedContainerResponse {
  bool success = 1;
}

message SetAllowOpenWhiskToFreeMemoryRequest {
  bool setValue = 1;
}

message SetAllowOpenWhiskToFreeMemoryResponse {
  bool success = 1;
}